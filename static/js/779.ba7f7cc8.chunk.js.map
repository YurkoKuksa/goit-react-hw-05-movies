{"version":3,"file":"static/js/779.ba7f7cc8.chunk.js","mappings":"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","sources":["api/apiMovies.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '2152d3494b622b3a7adc71c577ef6f6f',\n  },\n});\n\nexport const getMovie = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/day');\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching API:', error);\n    throw error;\n  }\n};\n\nexport const getSearch = async query => {\n  try {\n    const { data } = await instance.get(`/search/movie?query=${query}`);\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching API:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}`);\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching API:', error);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching API:', error);\n    throw error;\n  }\n};\n\nexport const getMovieReview = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching API:', error);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoaderBox = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  background-color: rgb(0, 0, 0, 0.5);\n`;\n","import React from 'react';\nimport { LoaderBox } from './Loader.styled';\nimport { SpinnerCircularFixed } from 'spinners-react';\n\nexport const Loader = () => {\n  return (\n    <LoaderBox>\n      Loding\n      <SpinnerCircularFixed\n        size={50}\n        thickness={100}\n        speed={100}\n        color=\"#36ad47\"\n        secondaryColor=\"rgba(0, 0, 0, 0.44)\"\n      />\n      ;\n    </LoaderBox>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Author = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Review = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const NoReview = styled.p`\n  margin-top: 50px;\n  color: darkgreen;\n  font-weight: 700;\n`;\n","import { getMovieReview } from 'api/apiMovies';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Author, NoReview, Review } from './Reviews.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieReview(movieId)\n      .then(reviewData => {\n        setReviews(reviewData.results);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews?.length ? (\n        <ul>\n          {reviews?.length > 0 &&\n            reviews.map(item => (\n              <li key={item.id}>\n                <Author>\n                  Author: <span> {item.author} </span>\n                </Author>\n                <Review>{item.content}</Review>\n              </li>\n            ))}\n        </ul>\n      ) : (\n        <NoReview>There are no reviews for this movie</NoReview>\n      )}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","get","sent","abrupt","results","t0","console","error","stop","apply","arguments","getSearch","_ref2","_callee2","query","_yield$instance$get2","_context2","concat","_x","getMovieDetails","_ref3","_callee3","id","_yield$instance$get3","_context3","_x2","getMovieCast","_ref4","_callee4","_yield$instance$get4","_context4","_x3","getMovieReview","_ref5","_callee5","_yield$instance$get5","_context5","_x4","LoaderBox","styled","_templateObject","_taggedTemplateLiteral","_jsxs","children","_jsx","SpinnerCircularFixed","size","thickness","speed","color","secondaryColor","Author","Review","_templateObject2","NoReview","_templateObject3","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","then","reviewData","finally","length","map","item","author","content","Loader"],"sourceRoot":""}